<?php

declare(strict_types=1);
use function Hyperf\Support\env;

return [
    // 启用 Swagger
    'enable' => env('SWAGGER_ENABLE', true),
    
    // 输出文件路径 (可选，设置后会在服务启动时生成JSON文件)
    // 多服务器环境下，可以使用 {server} 变量来区分不同服务器的文档
    // 例如：BASE_PATH . '/runtime/swagger/api-docs-{server}.json'
    'output_file' => BASE_PATH . '/runtime/swagger/api-docs-{server}.json',
    
    // 忽略回调 (可选，用于过滤不需要文档化的控制器和方法)
    // 返回 true 表示忽略该控制器/方法，返回 false 表示包含在文档中
    'ignore' => function ($controller, $action) {
        // 示例：忽略所有以 __ 开头的方法（魔术方法）
        if (str_starts_with($action, '__')) {
            return true;
        }
        
        // 示例：忽略特定控制器
        $ignoreControllers = [
            'App\\Controller\\AbstractController',
            'App\\Controller\\TestController',
            'App\\Controller\\HealthController',
        ];
        
        if (in_array($controller, $ignoreControllers)) {
            return true;
        }
        
        // 示例：忽略特定方法
        $ignoreMethods = ['test', 'debug', 'internal'];
        if (in_array($action, $ignoreMethods)) {
            return true;
        }
        
        return false;
    },

    // OpenAPI 3.1.1 基本信息
    'title' => env('APP_NAME', 'API Documentation'),
            'version' => '1.0.0',
    'description' => 'RESTful API documentation generated by Hyperf Plus Swagger',
    'summary' => 'Hyperf Plus API Documentation', // OpenAPI 3.1+ 新增
    
    // 联系信息
    'contact' => [
        'name' => 'API Support',
        'url' => 'https://github.com/hyperf-plus',
        'email' => 'support@example.com',
        ],

    // 许可证信息 (支持 SPDX 标识符 - OpenAPI 3.1+)
    'license' => [
        'name' => 'MIT',
        'identifier' => 'MIT', // OpenAPI 3.1+ 新增，与 url 字段互斥
        // 'url' => 'https://opensource.org/licenses/MIT',
    ],

    // 服务条款
    'termsOfService' => 'https://example.com/terms',

    // JSON Schema 方言 (OpenAPI 3.1+) - 使用默认值以避免警告
    // 'jsonSchemaDialect' => 'https://spec.openapis.org/oas/3.1/dialect/base',

    // 服务器配置
    'servers' => [
        [
            'url' => env('APP_URL', 'http://localhost:9501'),
            'description' => 'Development Server',
            'variables' => [
                'scheme' => [
                    'default' => 'http',
                    'enum' => ['http', 'https'],
                    'description' => 'The protocol scheme',
                ],
                'port' => [
                    'default' => '9501',
                    'description' => 'The server port',
                ],
            ],
        ],
        [
            'url' => 'https://api.example.com/v1',
            'description' => 'Production Server',
        ],
    ],

    // 全局安全要求
    'security' => [
        // 可选的 API Key 安全
        // ['ApiKeyAuth' => []],
        // OAuth2 安全
        // ['OAuth2' => ['read', 'write']],
    ],

    // 标签定义
    'tags' => [
        [
            'name' => 'Users',
            'description' => 'User management operations',
            'externalDocs' => [
                'description' => 'More info',
                'url' => 'https://example.com/docs/users',
            ],
        ],
        [
            'name' => 'Auth',
            'description' => 'Authentication operations',
        ],
    ],

    // 外部文档
    'externalDocs' => [
        'description' => 'Find more info here',
        'url' => 'https://github.com/hyperf-plus/swagger',
    ],

    // Webhooks (OpenAPI 3.1+ 新增)
    'webhooks' => [
        // 示例 webhook 定义
        // 'newUser' => [
        //     'post' => [
        //         'requestBody' => [
        //             'description' => 'Information about a new user',
        //             'content' => [
        //                 'application/json' => [
        //                     'schema' => [
        //                         '$ref' => '#/components/schemas/User'
        //                     ]
        //                 ]
        //             ]
        //         ],
        //         'responses' => [
        //             '200' => [
        //                 'description' => 'Webhook received successfully'
        //             ]
        //         ]
        //     ]
        // ],
    ],

    // 安全方案定义 (支持所有 OpenAPI 3.1+ 安全类型)
    'security_schemes' => [
        // API Key 认证
        'ApiKeyAuth' => [
            'type' => 'apiKey',
            'in' => 'header',
            'name' => 'X-API-Key',
            'description' => 'API key for authentication',
        ],

        // Bearer Token (JWT)
        'BearerAuth' => [
            'type' => 'http',
            'scheme' => 'bearer',
            'bearerFormat' => 'JWT',
            'description' => 'JWT Bearer token authentication',
        ],

        // Basic Authentication
        'BasicAuth' => [
            'type' => 'http',
            'scheme' => 'basic',
            'description' => 'Basic HTTP authentication',
        ],

        // OAuth2
        'OAuth2' => [
            'type' => 'oauth2',
            'description' => 'OAuth2 authentication',
            'flows' => [
                'authorizationCode' => [
                    'authorizationUrl' => 'https://example.com/oauth/authorize',
                    'tokenUrl' => 'https://example.com/oauth/token',
                    'refreshUrl' => 'https://example.com/oauth/refresh', // 可选
                    'scopes' => [
                        'read' => 'Read access to protected resources',
                        'write' => 'Write access to protected resources',
                        'admin' => 'Admin access to all resources',
        ],
    ],
                'clientCredentials' => [
                    'tokenUrl' => 'https://example.com/oauth/token',
                    'scopes' => [
                        'read' => 'Read access',
                        'write' => 'Write access',
                    ],
                ],
            ],
        ],

        // OpenID Connect
        'OpenID' => [
            'type' => 'openIdConnect',
            'openIdConnectUrl' => 'https://example.com/.well-known/openid-configuration',
            'description' => 'OpenID Connect authentication',
        ],

        // Mutual TLS (OpenAPI 3.1+ 新增)
        'MutualTLS' => [
            'type' => 'mutualTLS',
            'description' => 'Certificate-based mutual TLS authentication',
        ],

        // Cookie 认证
        'CookieAuth' => [
            'type' => 'apiKey',
            'in' => 'cookie',
            'name' => 'session_token',
            'description' => 'Session cookie authentication',
        ],
    ],

    // Swagger UI 配置
    'ui' => [
        'title' => 'Hyperf Plus API Documentation',
        'cdn_url' => 'https://cdnjs.cloudflare.com/ajax/libs/swagger-ui/5.25.2',
        'custom_css' => '',
        'custom_js' => '',
        
        // Swagger UI 高级配置
        'deep_linking' => true,
        'display_operation_id' => true,
        'default_models_expand_depth' => 2,
        'default_model_expand_depth' => 2,
        'display_request_duration' => true,
        'doc_expansion' => 'list', // 'list', 'full', 'none'
        'filter' => true,
        'show_extensions' => true,
        'show_common_extensions' => true,
        'use_unsafeMarkdown' => false,
        'request_snippets_enabled' => true,
        'try_it_out_enabled' => true,
        'oauth2_redirect_url' => env('APP_URL', 'http://localhost:9501') . '/swagger/oauth2-redirect.html',
        'persist_authorization' => true,
        'layout' => 'StandaloneLayout',
        'plugins' => ['DownloadUrl'],
        'presets' => ['SwaggerUIBundle.presets.apis', 'SwaggerUIStandalonePreset'],
    ],

    // API 扫描配置
    'scan' => [
        // 扫描的目录
        'paths' => [
            BASE_PATH . '/app/Controller',
        ],
        
        // 排除的目录
        'exclude_paths' => [],
        
        // 要扫描的注解类
        'class_map' => [
            HPlus\Route\Annotation\ApiController::class,
            HPlus\Route\Annotation\ApiResponse::class,
            HPlus\Route\Annotation\ApiResponseExample::class,
            HPlus\Route\Annotation\RequestBody::class,
            HPlus\Swagger\Annotation\ApiDefinition::class,
            HPlus\Swagger\Annotation\ApiServer::class,
        ],
    ],

    // 数据类型格式映射 (OpenAPI 3.1+ 扩展格式)
    'formats' => [
        // 标准格式
        'int32' => 'integer',
        'int64' => 'integer', 
        'float' => 'number',
        'double' => 'number',
        'password' => 'string',
        
        // 字符串格式
        'byte' => 'string',
        'binary' => 'string',
        'date' => 'string',
        'date-time' => 'string',
        'email' => 'string',
        'hostname' => 'string',
        'ipv4' => 'string',
        'ipv6' => 'string',
        'uri' => 'string',
        'uri-reference' => 'string',
        'uri-template' => 'string',
        'json-pointer' => 'string',
        'relative-json-pointer' => 'string',
        'regex' => 'string',
        'uuid' => 'string',
        
        // 自定义格式
        'phone' => 'string',
        'mobile' => 'string',
        'id-card' => 'string',
        'social-credit-code' => 'string',
    ],

    // 全局扩展 (Specification Extensions)
    'x-generator' => 'Hyperf Plus Swagger',
    'x-api-version' => '1.0.0',
    'x-build-date' => date('c'),
];
